# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VwLjaL-2Ts0F_tPn2TzO66B3wBjPRRBA
"""

pip install python-docx

import streamlit as st
import zipfile
import os
import re
import docx
from docx import Document
import csv
import pandas as pd

# Improved regex patterns for phone numbers and emails
phone_pattern = re.compile(r'(\+?\d{1,3}[-.\s]?)?(\(?\d{3}\)?[-.\s]?)?\d{3}[-.\s]?\d{4}')
email_pattern = re.compile(r'[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+')

docx_file = '/content/Resumes-20240418T071040Z-001.zip'
# Function to extract text from docx
def extract_text_from_docx(docx_file):
    doc = Document(docx_file)
    return '\n'.join([para.text for para in doc.paragraphs])

# Function to extract information from text
def extract_info_from_text(text):
    lines = text.split('\n')
    name = next((line for line in lines if line.strip()), 'N/A')
    phone_numbers = phone_pattern.findall(text)
    phone_number = phone_numbers[0][0] if phone_numbers else 'N/A'
    emails = email_pattern.findall(text)
    email = emails[0] if emails else 'N/A'
    return name, phone_number, email

# Function to process resumes in a zip file
def process_resumes(zip_path, extract_to):
    with zipfile.ZipFile(zip_path, 'r') as zip_ref:
        zip_ref.extractall(extract_to)
    resume_data = []
    for root, dirs, files in os.walk(extract_to):
        for file in files:
            if file.endswith('.docx'):
                file_path = os.path.join(root, file)
                text = extract_text_from_docx(file_path)
                name, phone_number, email = extract_info_from_text(text)
                resume_data.append({
                    'Name': name,
                    'Phone Number': phone_number,
                    'Email': email,
                    'File': file
                })
    return resume_data

# Function to save the extracted data to a CSV file
def save_to_csv(data, output_file):
    df = pd.DataFrame(data)
    df.to_csv(output_file, index=False)
    return output_file

# Streamlit app layout
st.title('Resume Information Extractor')

# File uploader for the ZIP file
uploaded_file = st.file_uploader("Upload a ZIP file containing resumes", type="zip")

if uploaded_file:
    # Save the uploaded ZIP file
    with open("uploaded_resumes.zip", "wb") as f:
        f.write(uploaded_file.getbuffer())

    extract_to = "extracted_resumes"
    os.makedirs(extract_to, exist_ok=True)

    # Process the resumes
    resume_info = process_resumes("uploaded_resumes.zip", extract_to)

    if resume_info:
        # Display the extracted data
        df = pd.DataFrame(resume_info)
        st.write("Extracted Resume Information:")
        st.dataframe(df)

        # Download the data as CSV
        csv_output_file = "resume_info_streamlit.csv"
        save_to_csv(resume_info, csv_output_file)
        with open(csv_output_file, "rb") as f:
            st.download_button("Download CSV", f, file_name="resume_info.csv", mime="text/csv")
    else:
        st.write("No valid DOCX resumes found in the uploaded ZIP file.")